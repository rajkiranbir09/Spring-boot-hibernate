server.port=8083
spring.application.name=Company Management Platform 

#server.context-path=/v1/api/
#spring.datasource.url=jdbc:mysql://localhost:3306/hibernateproject?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=password
#spring.datasource.tomcat.max-wait=20000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.min-idle=15
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
##spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
##spring.mvc.view.prefix: /WEB-INF/views/
##spring.mvc.view.suffix: .jsp
##spring.resources.static-locations=file:/var/www/static,classpath:static


# New
#
### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:mysql://localhost:3306/hibernateproject?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = password
#
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update


# ===============================
# DATABASE
# ===============================
#
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#
#spring.datasource.url=jdbc:mysql://localhost:3306/hibernateproject
#spring.datasource.username=root
#spring.datasource.password=password
#
#
#
## ===============================
## JPA / HIBERNATE
## ===============================
#
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#


spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/hibernateproject?useSSL=false
spring.datasource.username = root
spring.datasource.password = password

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql = true

spring.jpa.hibernate.ddl-auto = update

#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


# Add
#spring.datasource.tomcat.max-wait=20000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.min-idle=15
#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# add new


# Initialisation
#spring.datasource.schema=classpath:/data/hsqldb/schema.sql
#spring.datasource.data=classpath:/data/hsqldb/data.sql

# Actuator properties
info.app.name=Company discussion forum 
info.app.description=Company discussion forum project 
info.build.group=@project.groupId@
info.build.artifact=@project.artifactId@
info.build.version=@project.version@

management.context-path=/actuators
management.security.enabled=false

# Spring Security Configuration
#security.user.name=maxim
#security.user.password=12345

spring.datasource.tomcat.testWhileIdle = true
spring.datasource.tomcat.timeBetweenEvictionRunsMillis = 60000
spring.datasource.tomcat.validationQuery = SELECT 1


logging.level.=error

#spring.jpa.open-in-view=true

#For detailed logging during development
logging.level.org.springframework=TRACE
logging.level.com=TRACE
logging.level.org.springframework.web: DEBUG
logging.level.org.hibernate: ERROR


#spring.datasource.driver-class-name:com.mysql.jdbc.Driver
#
#spring.datasource.maxActive=2
#
#
#
#
#hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#
#
#
#spring.datasource.classname=com.mysql.jdbc.Driver


#
#hibernate.hbm2ddl.auto=update
#
#hibernate.globally_quoted_identifiers=true





# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Cache config
spring.cache.ehcache.config=classpath:ehcache.xml


# Messaging queue config
amqp.queue.name=values-queue
amqp.exchange.name=values-exchange


# REDIS (RedisProperties)
#spring.redis.database=aaa # Database index used by the connection factory.

#spring.redis.password= # Login password of the redis server.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.
spring.redis.host=localhost 
spring.redis.port=6379


redis.host=localhost
redis.port=6379

# Redis Config
spring.cache.type=redis

# REDIS (RedisProperties)


#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.timeout=0
#
#
## Elasticsearch config
#spring.data.elasticsearch.cluster-nodes=localhost:9200
#
## if spring data repository support is enabled
#
#spring.data.elasticsearch.repositories.enabled=true
#
#elasticsearch.clustername = hibernate
#elasticsearch.host = localhost
#elasticsearch.port = 9200

#
# Home directory of the embedded Elasticsearch instance. Default to the
# current working directory.
#
#spring.data.elasticsearch.properties.path.home=target/elastic-embedded
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s
#spring.data.elasticsearch.local=false
#spring.data.elasticsearch.properties.transport.tcp.connect_timeout=60s





#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=false


# Spring batch config
spring.batch.initialize-schema=never



#spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# Add new config
jdbc.driverClassName = com.mysql.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/hibernateproject
jdbc.username = root
jdbc.password = password
hibernate.dialect = org.hibernate.dialect.MySQLDialect

logging.level.s7.Application=WARN

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Logging pattern for the console
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Logging pattern for file
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

logging.file=/Users/hien/Desktop/sp/project/hibernate-springboot

#Data Source Properties

#spring.datasource.password =

#JPA Properties

spring.jpa.properties.hibernate.format_sql = TRUE


###Logging Levels
# Disable the default loggers
logging.level.org = WARN
logging.level.blog = WARN

#Show SQL executed with parameter bindings

logging.level.org.hibernate.type.descriptor = TRACE


# add cors
cors.host=http://localhost
cors.port = 8083


# Hibernate search config
#hibernate.search.default.directory_provider = filesystem
#hibernate.search.default.indexBase = /data/index/default


# Add RabbitMQ config 
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#jsa.rabbitmq.exchange=jsa.direct
#jsa.rabbitmq.routingkey=jsa.routingkey
#
## Config queue consumer
#jsa.rabbitmq.queue=jsa.queue
#spring.resources.static-locations=file:${ftp.home-dir}

# FTP connection
ftp.port = 2121
ftp.max-login =0 
ftp.keep-alive-timeout=10
ftp.max-threads =0
ftp.username=admin
ftp.password=password
ftp.server = server

# SFTP config




# Add social login config
# facebook provider details
facebook.api.key=${facebook.api.key}
facebook.api.secret=${facebook.api.secret}

# twitter provider details
twitter.api.key=${twitter.api.key}
twitter.api.secret=${twitter.api.secret}

# linkedin provider details
linkedin.api.key=${linkedin.api.key}
linkedin.api.secret=${linkedin.api.secret}

# google provider details
google.api.key=${google.api.key}
google.api.secret=${google.api.secret}


# Database
db.driver: com.mysql.jdbc.Driver
db.url: jdbc:mysql://localhost:3306/hibernateproject
db.username: root
db.password: password
# Hibernate
#hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql: true
#hibernate.current_session_context_class: thread
hibernate.hbm2ddl.auto: validate
entitymanager.packagesToScan: com.shoppingCart.app.model



spring.jpa.properties.hibernate.globally_quoted_identifiers=true


# Gmail SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=username
spring.mail.password=password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

debug=true
spring.thymeleaf.cache=false

# Amazon SES SMTP
#spring.mail.host=email-smtp.us-west-2.amazonaws.com
#spring.mail.username=username
#spring.mail.password=password
#spring.mail.properties.mail.transport.protocol=smtp
#spring.mail.properties.mail.smtp.port=25
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

# path to attachment file
attachment.invoice=path_to_file

# Add to new configuration files


# Config the profiles

# Config the upload


logging.level.org.springframework.*=INFO
logging.level.com.crossover.*=INFO

multipart.maxFileSize=1MB
multipart.maxRequestSize=1MB

multipart.max-file-size=10000Kb
multipart.max-request-size=10000Kb

multipart.enabled=true
spring.resources.chain.enabled = true
#spring.jpa.database=MYSQL

#spring.jpa.hibernate.ddl-auto=create